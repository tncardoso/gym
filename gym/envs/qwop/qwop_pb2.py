# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qwop.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='qwop.proto',
  package='deepqwop',
  syntax='proto3',
  serialized_pb=_b('\n\nqwop.proto\x12\x08\x64\x65\x65pqwop\"\x16\n\x05Score\x12\r\n\x05score\x18\x01 \x01(\x02\"=\n\x04Keys\x12\t\n\x01q\x18\x01 \x01(\x08\x12\t\n\x01w\x18\x02 \x01(\x08\x12\t\n\x01o\x18\x03 \x01(\x08\x12\t\n\x01p\x18\x04 \x01(\x08\x12\t\n\x01r\x18\x05 \x01(\x08\"I\n\x06Screen\x12\x10\n\x08\x66inished\x18\x01 \x01(\x08\x12\r\n\x05width\x18\x02 \x01(\r\x12\x0e\n\x06height\x18\x03 \x01(\r\x12\x0e\n\x06pixels\x18\x04 \x03(\r\"\x07\n\x05\x45mpty2\x9a\x01\n\nQwopServer\x12*\n\x05\x43lick\x12\x0e.deepqwop.Keys\x1a\x0f.deepqwop.Empty\"\x00\x12.\n\x08GetScore\x12\x0f.deepqwop.Empty\x1a\x0f.deepqwop.Score\"\x00\x12\x30\n\tGetScreen\x12\x0f.deepqwop.Empty\x1a\x10.deepqwop.Screen\"\x00\x42-\n\x12\x64\x65\x65pqwop.generatedB\x0fQwopServerProtoP\x01\xa2\x02\x03\x44QSb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SCORE = _descriptor.Descriptor(
  name='Score',
  full_name='deepqwop.Score',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='score', full_name='deepqwop.Score.score', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=46,
)


_KEYS = _descriptor.Descriptor(
  name='Keys',
  full_name='deepqwop.Keys',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='q', full_name='deepqwop.Keys.q', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='w', full_name='deepqwop.Keys.w', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='o', full_name='deepqwop.Keys.o', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='p', full_name='deepqwop.Keys.p', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='r', full_name='deepqwop.Keys.r', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=109,
)


_SCREEN = _descriptor.Descriptor(
  name='Screen',
  full_name='deepqwop.Screen',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='finished', full_name='deepqwop.Screen.finished', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='width', full_name='deepqwop.Screen.width', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='height', full_name='deepqwop.Screen.height', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pixels', full_name='deepqwop.Screen.pixels', index=3,
      number=4, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=184,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='deepqwop.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=193,
)

DESCRIPTOR.message_types_by_name['Score'] = _SCORE
DESCRIPTOR.message_types_by_name['Keys'] = _KEYS
DESCRIPTOR.message_types_by_name['Screen'] = _SCREEN
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY

Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), dict(
  DESCRIPTOR = _SCORE,
  __module__ = 'qwop_pb2'
  # @@protoc_insertion_point(class_scope:deepqwop.Score)
  ))
_sym_db.RegisterMessage(Score)

Keys = _reflection.GeneratedProtocolMessageType('Keys', (_message.Message,), dict(
  DESCRIPTOR = _KEYS,
  __module__ = 'qwop_pb2'
  # @@protoc_insertion_point(class_scope:deepqwop.Keys)
  ))
_sym_db.RegisterMessage(Keys)

Screen = _reflection.GeneratedProtocolMessageType('Screen', (_message.Message,), dict(
  DESCRIPTOR = _SCREEN,
  __module__ = 'qwop_pb2'
  # @@protoc_insertion_point(class_scope:deepqwop.Screen)
  ))
_sym_db.RegisterMessage(Screen)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'qwop_pb2'
  # @@protoc_insertion_point(class_scope:deepqwop.Empty)
  ))
_sym_db.RegisterMessage(Empty)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\022deepqwop.generatedB\017QwopServerProtoP\001\242\002\003DQS'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class QwopServerStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Click = channel.unary_unary(
        '/deepqwop.QwopServer/Click',
        request_serializer=Keys.SerializeToString,
        response_deserializer=Empty.FromString,
        )
    self.GetScore = channel.unary_unary(
        '/deepqwop.QwopServer/GetScore',
        request_serializer=Empty.SerializeToString,
        response_deserializer=Score.FromString,
        )
    self.GetScreen = channel.unary_unary(
        '/deepqwop.QwopServer/GetScreen',
        request_serializer=Empty.SerializeToString,
        response_deserializer=Screen.FromString,
        )


class QwopServerServicer(object):

  def Click(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetScore(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetScreen(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QwopServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Click': grpc.unary_unary_rpc_method_handler(
          servicer.Click,
          request_deserializer=Keys.FromString,
          response_serializer=Empty.SerializeToString,
      ),
      'GetScore': grpc.unary_unary_rpc_method_handler(
          servicer.GetScore,
          request_deserializer=Empty.FromString,
          response_serializer=Score.SerializeToString,
      ),
      'GetScreen': grpc.unary_unary_rpc_method_handler(
          servicer.GetScreen,
          request_deserializer=Empty.FromString,
          response_serializer=Screen.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'deepqwop.QwopServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaQwopServerServicer(object):
  def Click(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetScore(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def GetScreen(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaQwopServerStub(object):
  def Click(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  Click.future = None
  def GetScore(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetScore.future = None
  def GetScreen(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  GetScreen.future = None


def beta_create_QwopServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('deepqwop.QwopServer', 'Click'): Keys.FromString,
    ('deepqwop.QwopServer', 'GetScore'): Empty.FromString,
    ('deepqwop.QwopServer', 'GetScreen'): Empty.FromString,
  }
  response_serializers = {
    ('deepqwop.QwopServer', 'Click'): Empty.SerializeToString,
    ('deepqwop.QwopServer', 'GetScore'): Score.SerializeToString,
    ('deepqwop.QwopServer', 'GetScreen'): Screen.SerializeToString,
  }
  method_implementations = {
    ('deepqwop.QwopServer', 'Click'): face_utilities.unary_unary_inline(servicer.Click),
    ('deepqwop.QwopServer', 'GetScore'): face_utilities.unary_unary_inline(servicer.GetScore),
    ('deepqwop.QwopServer', 'GetScreen'): face_utilities.unary_unary_inline(servicer.GetScreen),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_QwopServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('deepqwop.QwopServer', 'Click'): Keys.SerializeToString,
    ('deepqwop.QwopServer', 'GetScore'): Empty.SerializeToString,
    ('deepqwop.QwopServer', 'GetScreen'): Empty.SerializeToString,
  }
  response_deserializers = {
    ('deepqwop.QwopServer', 'Click'): Empty.FromString,
    ('deepqwop.QwopServer', 'GetScore'): Score.FromString,
    ('deepqwop.QwopServer', 'GetScreen'): Screen.FromString,
  }
  cardinalities = {
    'Click': cardinality.Cardinality.UNARY_UNARY,
    'GetScore': cardinality.Cardinality.UNARY_UNARY,
    'GetScreen': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'deepqwop.QwopServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
